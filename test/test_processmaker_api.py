# coding: utf-8

"""
    ProcessMaker API

    This ProcessMaker I/O API provides access to a BPMN 2.0 compliant workflow engine api that is designed to be used as a microservice to support enterprise cloud applications.  The current Alpha 1.0 version supports most of the descriptive class of the BPMN 2.0 specification.

    OpenAPI spec version: 1.0.0
    Contact: support@processmaker.io
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from __future__ import absolute_import

import os
import sys
import unittest

import ProcessMaker_PMIO
from ProcessMaker_PMIO.rest import ApiException
from ProcessMaker_PMIO.apis.processmaker_api import ProcessmakerApi


class TestProcessmakerApi(unittest.TestCase):
    """ ProcessmakerApi unit test stubs """

    def setUp(self):
        self.api = ProcessMaker_PMIO.apis.processmaker_api.ProcessmakerApi()

    def tearDown(self):
        pass

    def test_add_client(self):
        """
        Test case for add_client

        
        """
        pass

    def test_add_event(self):
        """
        Test case for add_event

        
        """
        pass

    def test_add_event_connector(self):
        """
        Test case for add_event_connector

        
        """
        pass

    def test_add_flow(self):
        """
        Test case for add_flow

        
        """
        pass

    def test_add_gateway(self):
        """
        Test case for add_gateway

        
        """
        pass

    def test_add_group(self):
        """
        Test case for add_group

        
        """
        pass

    def test_add_groups_to_task(self):
        """
        Test case for add_groups_to_task

        
        """
        pass

    def test_add_input_output(self):
        """
        Test case for add_input_output

        
        """
        pass

    def test_add_instance(self):
        """
        Test case for add_instance

        
        """
        pass

    def test_add_process(self):
        """
        Test case for add_process

        
        """
        pass

    def test_add_task(self):
        """
        Test case for add_task

        
        """
        pass

    def test_add_task_connector(self):
        """
        Test case for add_task_connector

        
        """
        pass

    def test_add_user(self):
        """
        Test case for add_user

        
        """
        pass

    def test_add_users_to_group(self):
        """
        Test case for add_users_to_group

        
        """
        pass

    def test_delete_client(self):
        """
        Test case for delete_client

        
        """
        pass

    def test_delete_event(self):
        """
        Test case for delete_event

        
        """
        pass

    def test_delete_event_connector(self):
        """
        Test case for delete_event_connector

        
        """
        pass

    def test_delete_flow(self):
        """
        Test case for delete_flow

        
        """
        pass

    def test_delete_gateway(self):
        """
        Test case for delete_gateway

        
        """
        pass

    def test_delete_group(self):
        """
        Test case for delete_group

        
        """
        pass

    def test_delete_input_output(self):
        """
        Test case for delete_input_output

        
        """
        pass

    def test_delete_instance(self):
        """
        Test case for delete_instance

        
        """
        pass

    def test_delete_process(self):
        """
        Test case for delete_process

        
        """
        pass

    def test_delete_task(self):
        """
        Test case for delete_task

        
        """
        pass

    def test_delete_task_connector(self):
        """
        Test case for delete_task_connector

        
        """
        pass

    def test_delete_user(self):
        """
        Test case for delete_user

        
        """
        pass

    def test_event_trigger(self):
        """
        Test case for event_trigger

        
        """
        pass

    def test_find_client_by_id(self):
        """
        Test case for find_client_by_id

        
        """
        pass

    def test_find_clients(self):
        """
        Test case for find_clients

        
        """
        pass

    def test_find_data_model(self):
        """
        Test case for find_data_model

        
        """
        pass

    def test_find_event_by_id(self):
        """
        Test case for find_event_by_id

        
        """
        pass

    def test_find_event_connector_by_id(self):
        """
        Test case for find_event_connector_by_id

        
        """
        pass

    def test_find_event_connectors(self):
        """
        Test case for find_event_connectors

        
        """
        pass

    def test_find_events(self):
        """
        Test case for find_events

        
        """
        pass

    def test_find_flow_by_id(self):
        """
        Test case for find_flow_by_id

        
        """
        pass

    def test_find_flows(self):
        """
        Test case for find_flows

        
        """
        pass

    def test_find_gateway_by_id(self):
        """
        Test case for find_gateway_by_id

        
        """
        pass

    def test_find_gateways(self):
        """
        Test case for find_gateways

        
        """
        pass

    def test_find_group_by_id(self):
        """
        Test case for find_group_by_id

        
        """
        pass

    def test_find_groups(self):
        """
        Test case for find_groups

        
        """
        pass

    def test_find_input_output_by_id(self):
        """
        Test case for find_input_output_by_id

        
        """
        pass

    def test_find_input_outputs(self):
        """
        Test case for find_input_outputs

        
        """
        pass

    def test_find_instance_by_id(self):
        """
        Test case for find_instance_by_id

        
        """
        pass

    def test_find_instances(self):
        """
        Test case for find_instances

        
        """
        pass

    def test_find_process_by_id(self):
        """
        Test case for find_process_by_id

        
        """
        pass

    def test_find_processes(self):
        """
        Test case for find_processes

        
        """
        pass

    def test_find_task_by_id(self):
        """
        Test case for find_task_by_id

        
        """
        pass

    def test_find_task_connector_by_id(self):
        """
        Test case for find_task_connector_by_id

        
        """
        pass

    def test_find_task_connectors(self):
        """
        Test case for find_task_connectors

        
        """
        pass

    def test_find_task_instance_by_id(self):
        """
        Test case for find_task_instance_by_id

        
        """
        pass

    def test_find_task_instances(self):
        """
        Test case for find_task_instances

        
        """
        pass

    def test_find_tasks(self):
        """
        Test case for find_tasks

        
        """
        pass

    def test_find_user_by_id(self):
        """
        Test case for find_user_by_id

        
        """
        pass

    def test_find_users(self):
        """
        Test case for find_users

        
        """
        pass

    def test_import_bpmn_file(self):
        """
        Test case for import_bpmn_file

        
        """
        pass

    def test_myself_user(self):
        """
        Test case for myself_user

        
        """
        pass

    def test_remove_groups_from_task(self):
        """
        Test case for remove_groups_from_task

        
        """
        pass

    def test_remove_users_from_group(self):
        """
        Test case for remove_users_from_group

        
        """
        pass

    def test_sync_groups_to_task(self):
        """
        Test case for sync_groups_to_task

        
        """
        pass

    def test_sync_users_to_group(self):
        """
        Test case for sync_users_to_group

        
        """
        pass

    def test_update_client(self):
        """
        Test case for update_client

        
        """
        pass

    def test_update_event(self):
        """
        Test case for update_event

        
        """
        pass

    def test_update_event_connector(self):
        """
        Test case for update_event_connector

        
        """
        pass

    def test_update_flow(self):
        """
        Test case for update_flow

        
        """
        pass

    def test_update_gateway(self):
        """
        Test case for update_gateway

        
        """
        pass

    def test_update_group(self):
        """
        Test case for update_group

        
        """
        pass

    def test_update_input_output(self):
        """
        Test case for update_input_output

        
        """
        pass

    def test_update_instance(self):
        """
        Test case for update_instance

        
        """
        pass

    def test_update_process(self):
        """
        Test case for update_process

        
        """
        pass

    def test_update_task(self):
        """
        Test case for update_task

        
        """
        pass

    def test_update_task_connector(self):
        """
        Test case for update_task_connector

        
        """
        pass

    def test_update_task_instance(self):
        """
        Test case for update_task_instance

        
        """
        pass

    def test_update_user(self):
        """
        Test case for update_user

        
        """
        pass


if __name__ == '__main__':
    unittest.main()
